body {
  background-color: azure;
}
.Contact {
  text-align: center;
  color: black;
}
.Summary:hover {
  text-align: center;
  background-color: coral;
}
a {
  text-decoration: lightpink;
}
a[href^="Contact.Details"] {
  color: brown;
}
p:nth-child(odd) {
  background-color: blueviolet;
  text-align: center;
}
p:not(.important) {
  background-color: crimson;
  text-align: center;
}
.demo {
  align-items: center;
}
#demo {
  position: relative;
  display: inline-block;
}
#reel {
  width: 100vw;
}

/*

CSS Combinators
A combinator is something that explains the relationship between the selectors.

A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.

There are four different combinators in CSS:

descendant selector (space)

div p {
  background-color: yellow;
}
child selector (>)

div > p {
  background-color: yellow;
}

adjacent sibling selector (+)

div + p {
  background-color: yellow;
}

general sibling selector (~)

div ~ p {
  background-color: yellow;
}

 CSS pseudo-class :is()
https://developer.mozilla.org/en-US/docs/Web/CSS/:is

:is(ol, ul, menu:unsupported) :is(ol, ul) {
    color: green;
}

{
CSS Specificity - a score/rank that determines which style declaration is ultimately applied to an element.

Specificity Hierarchy
Every CSS selector has its place in the specificity hierarchy.

There are four categories which define the specificity level of a selector:

Inline styles - Example: <h1 style="color: pink;">
IDs - Example: #navbar
Classes, pseudo-classes, attribute selectors - Example: .test, :hover, [href]
Elements and pseudo-elements - Example: h1, :before

https://www.w3schools.com/css/css_specificity.asp

}

*/
